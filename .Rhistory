filter(treatment != 1) %>%
group_by(streetName, treatment, yearbinary) %>%
#pivot_longer(cols = c(bikeshare, walkshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 2, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare),
autoshare = log(autoshare),
total = log(total))
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary +autoshare + total, data = final_filtered_data_studyarea)
summary(did_bikeshare)
final_filtered_data_studyarea <- filtered_data_studyarea %>%
filter(treatment != 1) %>%
group_by(streetName, treatment, yearbinary) %>%
#pivot_longer(cols = c(bikeshare, walkshare)) %>%
summarize(bikeshare=mean(bikeshare),  autoshare=mean(autoshare), totak=mean(total))%>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 2, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare),
autoshare = log(autoshare),
total = log(total))
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary +autoshare + total, data = final_filtered_data_studyarea)
final_filtered_data_studyarea <- filtered_data_studyarea %>%
filter(treatment != 1) %>%
group_by(streetName, treatment, yearbinary) %>%
#pivot_longer(cols = c(bikeshare, walkshare)) %>%
summarize(bikeshare=mean(bikeshare),  autoshare=mean(autoshare), total=mean(total))%>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 2, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare),
autoshare = log(autoshare),
total = log(total))
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary +autoshare + total, data = final_filtered_data_studyarea)
summary(did_bikeshare)
final_filtered_data_studyarea <- filtered_data_studyarea %>%
filter(treatment != 1) %>%
#pivot_longer(cols = c(bikeshare, walkshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 2, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare),
autoshare = log(autoshare),
total = log(total))
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary +autoshare + total, data = final_filtered_data_studyarea)
summary(did_bikeshare)
plot(value_log ~ treatment * yearbinary +autoshare + total, data = final_filtered_data_studyarea)
plot(value_log ~ treatment * yearbinary, data = final_filtered_data_studyarea)
plot(value_log ~ treatment * yearbinary + total, data = final_filtered_data_studyarea)
plot(value_log ~ treatment * yearbinary + autoshare, data = final_filtered_data_studyarea)
plot(value_log ~ treatment * yearbinary, data = final_filtered_data_studyarea)
cor(final_filtered_data_studyarea$value_log, final_filtered_data_studyarea$treatment*yearbinary)
cor(final_filtered_data_studyarea$value_log, final_filtered_data_studyarea$(treatment*yearbinary)
cor(final_filtered_data_studyarea$value_log, final_filtered_data_studyarea$(treatment*yearbinary))
final_filtered_data_studyarea <- filtered_data_studyarea %>%
filter(treatment != 1) %>%
#pivot_longer(cols = c(bikeshare, walkshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 2, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare),
autoshare = log(autoshare),
total = log(total),
did=treatment*yearbinary)
cor(final_filtered_data_studyarea$value_log, final_filtered_data_studyarea$did)
final_filtered_data_studyarea <- filtered_data_studyarea %>%
filter(treatment != 1) %>%
#pivot_longer(cols = c(bikeshare, walkshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 2, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =bikeshare,
autoshare = log(autoshare),
total = log(total),
did=treatment*yearbinary)
cor(final_filtered_data_studyarea$value_log, final_filtered_data_studyarea$did)
hist(final_filtered_data_studyarea$value_log)
final_filtered_data_studyarea <- filtered_data_studyarea %>%
filter(treatment != 1) %>%
#pivot_longer(cols = c(bikeshare, walkshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 2, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare),
autoshare = log(autoshare),
total = log(total),
did=treatment*yearbinary)
hist(final_filtered_data_studyarea$value_log)
cor(final_filtered_data_studyarea$value_log, final_filtered_data_studyarea$treatment)
cor(final_filtered_data_studyarea$value_log, final_filtered_data_studyarea$yearbinary)
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary , data = final_filtered_data_studyarea)
summary(did_bikeshare)
# Difference in difference for trips --------------------------------------
#filtering datasets for just treatment and control group
final_filtered_data_nostudyarea <- final_filtered_data %>%
filter(treatment != 2) %>%
pivot_longer(cols = c(bikeshare, autoshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 1, 1, 0),
mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(value))
filtered_data_nostudyarea %>%
mapview()
final_filtered_data_nostudyarea %>%
mapview()
# Difference in difference for trips --------------------------------------
#filtering datasets for just treatment and control group
final_filtered_data_nostudyarea <- final_filtered_data %>%
filter(treatment != 2) %>%
#pivot_longer(cols = c(bikeshare, autoshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 1, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(value))
# Difference in difference for trips --------------------------------------
#filtering datasets for just treatment and control group
final_filtered_data_nostudyarea <- final_filtered_data %>%
filter(treatment != 2) %>%
#pivot_longer(cols = c(bikeshare, autoshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 1, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare))
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary , data = final_filtered_data_nostudyarea)
summary(did_bikeshare)
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary , data = final_filtered_data_nostudyarea)
summary(did_bikeshare)
final_filtered_data <- final_all_data %>%
mutate(bikeshare = biking/total*100, autoshare = (priv_auto+on_demand+carpool)/total*100, walkshare=walking/total*100) %>%
filter(streetName %in% selectingstreets_manual, bikeshare>0, autoshare>0, walkshare>0)
# Difference in difference for trips --------------------------------------
#filtering datasets for just treatment and control group
final_filtered_data_nostudyarea <- final_filtered_data %>%
filter(treatment != 2) %>%
#pivot_longer(cols = c(bikeshare, autoshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 1, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare))
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary , data = final_filtered_data_nostudyarea)
summary(did_bikeshare)
adjusted <- final_filtered_data_studyarea %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean (bikeshare))
adjusted <- final_filtered_data_studyarea %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
adjusted <- filtered_data_studyarea %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
filtered_data_studyarea %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
plot(bikeshare)
plot(n ~ bikeshare, data = test)
test <- filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
group_by(bikeshare) %>%
summary(n=n())
plot(n ~ bikeshare, data = test)
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
group_by(bikeshare) %>%
summary(n=n())
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round(bikeshare,  digits=0) %>%
group_by(bikeshare) %>%
summary(n=n())
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round(filtered_data_studyarea$bikeshare,  digits=0) %>%
group_by(bikeshare) %>%
summary(n=n())
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round(filtered_data_studyarea$bikeshare,  digits=0) %>%
summary(n=n())
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round(filtered_data_studyarea$bikeshare,  digits=0)
x}
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round_df(.,  0)
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round_df(filtered_data_studyarea$bikeshare,  0)
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round_df(filtered_data_studyarea[bikeshare],  0)
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round_df(filtered_data_studyarea[bikeshare],  1)
filtered_data_studyarea %>%
filter(yearbinary == 0 & treatment == 0) %>%
round_df(filtered_data_studyarea[bikeshare], digits== 1)
round_df(filtered_data_studyarea[bikeshare], digits== 1)
round_df(filtered_data_nostudyarea[bikeshare], digits== 1)
final_filtered_data_studyarea <- filtered_data_studyarea %>%
filter(treatment != 1) %>%
#pivot_longer(cols = c(bikeshare, walkshare)) %>%
transmute(streetName=streetName, yearbinary,
treatment = ifelse(treatment == 2, 1, 0),
#mode = ifelse(name == "bikeshare", 1, 0),
value_log =log(bikeshare),
autoshare = log(autoshare),
total = log(total),
did=treatment*yearbinary)
filtered_data_studyarea %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
#performing various did tests
did_bikeshare <- lm(value_log ~ treatment * yearbinary, data = final_filtered_data_nostudyarea)
summary(did_bikeshare)
filtered_data_nostudyarea %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
final_filtered_data_nostudyarea %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
final_filtered_data%>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
plot(bikeshare ~ treatment, final_filtered_data)
plot(bikeshare ~ yearbinary, final_filtered_data)
plot(bikeshare ~ (treatment*yearbinary), final_filtered_data)
final_filtered_data_graph <- final_filtered_data %>%
mutate(did=treatment*yearbinary)
income.graph<-ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
graph<-ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
View(graph)
View(graph)
View(graph)
View(graph)
View(graph)
ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
final_filtered_data_graph <- final_filtered_data %>%
filter(treatment!=2) %>%
mutate(did=treatment*yearbinary)
ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
final_filtered_data_graph <- final_filtered_data %>%
filter(treatment=0) %>%
mutate(did=treatment*yearbinary)
ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
final_filtered_data_graph <- final_filtered_data %>%
filter(treatment=1) %>%
mutate(did=treatment*yearbinary)
ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
final_filtered_data_graph <- final_filtered_data %>%
filter(treatment==1) %>%
mutate(did=treatment*yearbinary)
ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph + finalfiltered_data_graph2, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
finalfiltered_data_graph2<- final_filtered_data %>%
filter(treatment==0) %>%
mutate(did=treatment*yearbinary)
ggplot(final_filtered_data_graph + finalfiltered_data_graph2, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph, finalfiltered_data_graph2, aes(x=did, y=bikeshare))+
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+ ggplot(final_filtered_data_graph2, aes(x=did, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
finalfiltered_data_graph2<- final_filtered_data %>%
filter(treatment==0) %>%
mutate(did=treatment*yearbinary)
ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+ ggplot(final_filtered_data_graph2, aes(x=did, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph, aes(x=did, y=bikeshare))+ ggplot(finalfiltered_data_graph2, aes(x=did, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph + finalfiltered_data_graph2, aes(x=did, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph & finalfiltered_data_graph2, aes(x=did, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph, finalfiltered_data_graph2, aes(x=did, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph + finalfiltered_data_graph2, aes(x=did, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
final_filtered_data_graph2<- final_filtered_data %>%
filter(treatment==0) %>%
mutate(did=treatment*yearbinary)
ggplot(final_filtered_data_graph2, aes(x=did, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph2, aes(x=yearbinary, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph, aes(x=yearbinary, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph2, aes(x=yearbinary, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
final_filtered_data %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
ggplot(final_filtered_data_graph, aes(x=yearbinary, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
ggplot(final_filtered_data_graph2, aes(x=yearbinary, y=bikeshare)) +
geom_point() + geom_smooth(method="lm", col="black")
final_filtered_data %>%
group_by(treatment, yearbinary) %>%
summarize(bikeshare  = mean(bikeshare))
#DiDs for calculated variables. Different estimates checked here. None are significant... Not sure why.
did_bikecrashes <- lm(bikecrashes_per_trip ~ treatment * period * trips, data = crash_filtered_final)
summary(did_bikecrashes)
#DiDs for calculated variables. Different estimates checked here. None are significant... Not sure why.
did_bikecrashes <- lm(bikecrashes_per_trip ~ treatment * period, data = crash_filtered_final)
summary(did_bikecrashes)
View(before_corridor_crashes)
View(before_corridor_crashes)
#Controls 2019
# read in crash data for 2019
crashes_before_controls <- st_read("Crashes_in_DC/Controls_19to20.shp")
library(sf)
library(tidyverse)
library(visdat)
library(tigris)
library(dplyr)
library(mapview)
#Controls 2019
# read in crash data for 2019
crashes_before_controls <- st_read("Crashes_in_DC/Controls_19to20.shp")
# filter to controls 2019 and add an index number to join backwards later
temp_controls_19 <- final_all_data %>%
filter(treatment == 0, yearbinary == 0) %>%
group_by(streetName) %>%
summarize(trips=mean(total), auto=mean(priv_auto+carpool+on_demand), biking=mean(biking), walking=mean(walking)) %>%
mutate(fid=row_number())
# remove the spatial data so that it's faster to join
crashes_before_controls_nonst <- crashes_before_controls %>%
st_drop_geometry()
# create new columns that count up the people involved and fatalities
summary <- crashes_before_controls %>%
mutate(bikes = TOTAL_BICY, peds = TOTAL_PEDE, vehicles = TOTAL_VEHI,
bike_fatalities = FATAL_BICY, peds_fatalities = FATAL_PEDE,
all_fatalities = FATAL_BICY + FATAL_DRIV + FATAL_PEDE + FATALPASSE,
# calculate the ID of the nearest road
nearest_road_fid = st_nearest_feature(crashes_before_controls, temp_controls_19)) %>%
# drop the geometry so that the rest runs faster
st_drop_geometry() %>%
group_by(nearest_road_fid) %>%
summarize(crashes = n(),
bikes = sum(bikes),
peds = sum(peds),
vehicles = sum(vehicles),
bike_fatalities = sum(bike_fatalities),
peds_fatalities = sum(peds_fatalities),
all_fatalities = sum(all_fatalities))
# join the crashes to the road segments
before_controls_crashes <- temp_controls_19 %>%
left_join(., summary, by = c("fid" = "nearest_road_fid")) %>%
mutate(treatment = 0, period = 0)
#Controls 2022
# read in crash data for 2022
crashes_after_controls <- st_read("Crashes_in_DC/Controls_21to23.shp")
# filter to controls 2022 and add an index number to join backwards later
temp_controls_22 <- final_all_data %>%
filter(treatment == 0, yearbinary == 1) %>%
group_by(streetName) %>%
summarize(trips=mean(total), auto=mean(priv_auto+carpool+on_demand), biking=mean(biking), walking=mean(walking)) %>%
mutate(fid=row_number())
# remove the spatial data so that it's faster to join
crashes_after_controls_nonst <- crashes_after_controls %>%
st_drop_geometry()
# create new columns that count up the people involved and fatalities
summary <- crashes_after_controls %>%
mutate(bikes = TOTAL_BICY, peds = TOTAL_PEDE, vehicles = TOTAL_VEHI,
bike_fatalities = FATAL_BICY, peds_fatalities = FATAL_PEDE,
all_fatalities = FATAL_BICY + FATAL_DRIV + FATAL_PEDE + FATALPASSE,
# calculate the ID of the nearest road
nearest_road_fid = st_nearest_feature(crashes_after_controls, temp_controls_22)) %>%
# drop the geometry so that the rest runs faster
st_drop_geometry() %>%
group_by(nearest_road_fid) %>%
summarize(crashes = n(),
bikes = sum(bikes),
peds = sum(peds),
vehicles = sum(vehicles),
bike_fatalities = sum(bike_fatalities),
peds_fatalities = sum(peds_fatalities),
all_fatalities = sum(all_fatalities))
# join the crashes to the road segments
after_controls_crashes <- temp_controls_22 %>%
left_join(., summary, by = c("fid" = "nearest_road_fid")) %>%
mutate(treatment = 0, period = 1)
#Study Corridor 2019
# read in crash data for 2019
crashes_before_corridor <- st_read("Crashes_in_DC/StudyCorridor_19to20.shp")
# filter to corridors 2019 and add an index number to join backwards later
temp_corridor_19 <- final_all_data %>%
filter(treatment == 1, yearbinary == 0) %>%
group_by(streetName) %>%
summarize(trips=mean(total), auto=mean(priv_auto+carpool+on_demand), biking=mean(biking), walking=mean(walking)) %>%
mutate(fid=row_number())
# remove the spatial data so that it's faster to join
crashes_before_corridor_nonst <- crashes_before_corridor %>%
st_drop_geometry()
# create new columns that count up the people involved and fatalities
summary <- crashes_before_corridor %>%
mutate(bikes = TOTAL_BICY, peds = TOTAL_PEDE, vehicles = TOTAL_VEHI,
bike_fatalities = FATAL_BICY, peds_fatalities = FATAL_PEDE,
all_fatalities = FATAL_BICY + FATAL_DRIV + FATAL_PEDE + FATALPASSE,
# calculate the ID of the nearest road
nearest_road_fid = st_nearest_feature(crashes_before_corridor, temp_corridor_19)) %>%
# drop the geometry so that the rest runs faster
st_drop_geometry() %>%
group_by(nearest_road_fid) %>%
summarize(crashes = n(),
bikes = sum(bikes),
peds = sum(peds),
vehicles = sum(vehicles),
bike_fatalities = sum(bike_fatalities),
peds_fatalities = sum(peds_fatalities),
all_fatalities = sum(all_fatalities))
# join the crashes to the road segments
before_corridor_crashes <- temp_corridor_19 %>%
left_join(., summary, by = c("fid" = "nearest_road_fid")) %>%
mutate(treatment = 1, period = 0)
#Study Corridor 2022
# read in crash data for 2022
crashes_after_corridor <- st_read("Crashes_in_DC/StudyCorridor_21to23.shp")
# filter to corridors 2022 and add an index number to join backwards later
temp_corridor_22 <- final_all_data %>%
filter(treatment == 1, yearbinary == 1) %>%
group_by(streetName) %>%
summarize(trips=mean(total), auto=mean(priv_auto+carpool+on_demand), biking=mean(biking), walking=mean(walking)) %>%
mutate(fid=row_number())
# remove the spatial data so that it's faster to join
crashes_after_corridor_nonst <- crashes_after_corridor %>%
st_drop_geometry()
# create new columns that count up the people involved and fatalities
summary <- crashes_after_corridor %>%
mutate(bikes = TOTAL_BICY, peds = TOTAL_PEDE, vehicles = TOTAL_VEHI,
bike_fatalities = FATAL_BICY, peds_fatalities = FATAL_PEDE,
all_fatalities = FATAL_BICY + FATAL_DRIV + FATAL_PEDE + FATALPASSE,
# calculate the ID of the nearest road
nearest_road_fid = st_nearest_feature(crashes_after_corridor, temp_corridor_22)) %>%
# drop the geometry so that the rest runs faster
st_drop_geometry() %>%
group_by(nearest_road_fid) %>%
summarize(crashes = n(),
bikes = sum(bikes),
peds = sum(peds),
vehicles = sum(vehicles),
bike_fatalities = sum(bike_fatalities),
peds_fatalities = sum(peds_fatalities),
all_fatalities = sum(all_fatalities))
# join the crashes to the road segments
after_corridor_crashes <- temp_corridor_22 %>%
left_join(., summary, by = c("fid" = "nearest_road_fid")) %>%
mutate(treatment = 1, period = 1)
# Crash Analysis: Merging and cleaning  data -----------------------------------
#Merge the joined crash data into one dataset.
all_crash <- rbind(before_controls_crashes, after_controls_crashes, before_corridor_crashes, after_corridor_crashes)
#Replace NAs with 0s
all_crash[is.na(all_crash)] <- 0
#Calculate crashes and fatalities per trip by mode. Replace NaN with NA.
all_crash <- all_crash %>%
mutate(bikecrashes_per_trip  = ifelse(biking >0, bikes/biking, NA), pedcrashes_per_trip = ifelse(walking>0, peds/walking, NA), autocrashes_per_trip = ifelse(auto>0, vehicles/auto, NA), totalcrashes_per_trip = ifelse(trips>0, crashes/trips, NA)) %>%
mutate(bikefat_per_trip = ifelse(biking >0, bike_fatalities/biking, NA),  pedfat_per_trip = ifelse(walking>0,  peds_fatalities/walking, NA), fatalities_per_trip=ifelse(trips>0, all_fatalities/trips, NA))
all_crash %>%
mapview()
all_crash %?%
st_write("Crash_Tableau")
all_crash %>%
st_write("Crash_Tableau")
all_crash %>%
st_write("Crash_Tableau.shp")
View(all_crash)
all_crash %>%
filter(treatment == 1 & period==0) %>%
st_drop_geometry() %>%
summarize(mean(bikecrashes_per_trip), mean(trips))
selectingstreets_crash <- all_crash %>%
filter(period==0 & bikecrashes_per_trip>0 & bikecrashes_per_trip<0.07 & trips>4000 & trips<9000) %>%
distinct(streetName)%>%
pull()
crash_filtered <- all_crash %>%
filter(streetName %in% selectingstreets_crash)
crash_filtered %>%
mapview()
View(crash_filtered)
View(all_crash)
all_crash %>%
st_write("Crash_Tableau.shp")
View(all_crash)
all_crash %>%
mapview()
